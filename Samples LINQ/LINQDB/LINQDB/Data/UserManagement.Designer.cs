//------------------------------------------------------------------------------
// <auto-generated>
//    Dieser Code wurde aus einer Vorlage generiert.
//
//    Manuelle Änderungen an dieser Datei führen möglicherweise zu unerwartetem Verhalten Ihrer Anwendung.
//    Manuelle Änderungen an dieser Datei werden überschrieben, wenn der Code neu generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM-Beziehungsmetadaten

[assembly: EdmRelationshipAttribute("UserManagement", "FK_Persons_Cities", "Cities", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LINQDB.Data.Cities), "Persons", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LINQDB.Data.Person), true)]

#endregion

namespace LINQDB.Data
{
    #region Kontexte
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    public partial class dbLINQSamplesEntities : ObjectContext
    {
        #region Konstruktoren
    
        /// <summary>
        /// Initialisiert ein neues dbLINQSamplesEntities-Objekt mithilfe der in Abschnitt 'dbLINQSamplesEntities' der Anwendungskonfigurationsdatei gefundenen Verbindungszeichenfolge.
        /// </summary>
        public dbLINQSamplesEntities() : base("name=dbLINQSamplesEntities", "dbLINQSamplesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialisiert ein neues dbLINQSamplesEntities-Objekt.
        /// </summary>
        public dbLINQSamplesEntities(string connectionString) : base(connectionString, "dbLINQSamplesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialisiert ein neues dbLINQSamplesEntities-Objekt.
        /// </summary>
        public dbLINQSamplesEntities(EntityConnection connection) : base(connection, "dbLINQSamplesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partielle Methoden
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet-Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<Cities> Cities
        {
            get
            {
                if ((_Cities == null))
                {
                    _Cities = base.CreateObjectSet<Cities>("Cities");
                }
                return _Cities;
            }
        }
        private ObjectSet<Cities> _Cities;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<Person> Persons
        {
            get
            {
                if ((_Persons == null))
                {
                    _Persons = base.CreateObjectSet<Person>("Persons");
                }
                return _Persons;
            }
        }
        private ObjectSet<Person> _Persons;

        #endregion
        #region AddTo-Methoden
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'Cities'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToCities(Cities cities)
        {
            base.AddObject("Cities", cities);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'Persons'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToPersons(Person person)
        {
            base.AddObject("Persons", person);
        }

        #endregion
    }
    

    #endregion
    
    #region Entitäten
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UserManagement", Name="Cities")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Cities : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues Cities-Objekt.
        /// </summary>
        /// <param name="cityId">Anfangswert der Eigenschaft CityId.</param>
        /// <param name="name">Anfangswert der Eigenschaft Name.</param>
        public static Cities CreateCities(global::System.Int32 cityId, global::System.String name)
        {
            Cities cities = new Cities();
            cities.CityId = cityId;
            cities.Name = name;
            return cities;
        }

        #endregion
        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityId
        {
            get
            {
                return _CityId;
            }
            set
            {
                if (_CityId != value)
                {
                    OnCityIdChanging(value);
                    ReportPropertyChanging("CityId");
                    _CityId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CityId");
                    OnCityIdChanged();
                }
            }
        }
        private global::System.Int32 _CityId;
        partial void OnCityIdChanging(global::System.Int32 value);
        partial void OnCityIdChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserManagement", "FK_Persons_Cities", "Persons")]
        public EntityCollection<Person> Persons
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("UserManagement.FK_Persons_Cities", "Persons");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("UserManagement.FK_Persons_Cities", "Persons", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UserManagement", Name="Person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Person : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues Person-Objekt.
        /// </summary>
        /// <param name="id">Anfangswert der Eigenschaft Id.</param>
        /// <param name="firstName">Anfangswert der Eigenschaft FirstName.</param>
        /// <param name="lastName">Anfangswert der Eigenschaft LastName.</param>
        public static Person CreatePerson(global::System.Int32 id, global::System.String firstName, global::System.String lastName)
        {
            Person person = new Person();
            person.Id = id;
            person.FirstName = firstName;
            person.LastName = lastName;
            return person;
        }

        #endregion
        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CityOfBirth
        {
            get
            {
                return _CityOfBirth;
            }
            set
            {
                OnCityOfBirthChanging(value);
                ReportPropertyChanging("CityOfBirth");
                _CityOfBirth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CityOfBirth");
                OnCityOfBirthChanged();
            }
        }
        private Nullable<global::System.Int32> _CityOfBirth;
        partial void OnCityOfBirthChanging(Nullable<global::System.Int32> value);
        partial void OnCityOfBirthChanged();

        #endregion
    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserManagement", "FK_Persons_Cities", "Cities")]
        public Cities City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cities>("UserManagement.FK_Persons_Cities", "Cities").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cities>("UserManagement.FK_Persons_Cities", "Cities").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Cities> CityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cities>("UserManagement.FK_Persons_Cities", "Cities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Cities>("UserManagement.FK_Persons_Cities", "Cities", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
